version: '3.3'
services:
  svapp:
    restart: unless-stopped
    container_name: svapp
    build:
      context: .
      dockerfile: dockerfiles/docker_sva.conf
    command: python ./main.py
    volumes:
      - ../code_save_video_app:/code_app
      - ../media/archive/cam_entrance:/code_app/media_files
      - ../logs/svapp:/code_app/logs
    networks:
      - home_default
    env_file:
      - .env
  csapp:
    restart: unless-stopped
    container_name: csapp
    build:
      context: .
      dockerfile: dockerfiles/docker_csa.conf
    command: python ./main.py
    volumes:
      - ../code_stream_video_app:/code_app
      - ../media/stream/cam_entrance:/code_app/media_files
      - ../logs/csapp:/code_app/logs
    networks:
      - home_default
    env_file:
      - .env
  django:
    restart: unless-stopped
    container_name: django
    volumes:
      - ../code_site:/code_site
      - ../collect_static:/collect_static
      - ../media:/media
      - ./sock:/sock
    build:
      context: .
      dockerfile: dockerfiles/docker_django.conf
    command: uwsgi --ini /etc/uwsgi.ini
    links:
      - db
    depends_on:
      - db
    networks:
      - home_default
    env_file:
      - .env
  nginx:
    restart: unless-stopped
    container_name: nginx
    volumes:
      - ../collect_static:/collect_static
      - ../media:/media_static
      - ./sock:/sock
    build:
      context: .
      dockerfile: dockerfiles/docker_nginx.conf
    depends_on:
      - django
    networks:
      - home_default
      - traefik_external
    labels:
      # Common traefik labels
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_external"
      - "traefik.http.middlewares.home-redirect.redirectscheme.scheme=https"
      # Router traefik labels for http hostname entrypoint
      - "traefik.http.routers.http-home.middlewares=home-redirect@docker"
      - "traefik.http.routers.http-home.rule=Host(`home.amtrend.ru`)"
      - "traefik.http.routers.http-home.entrypoints=http"
      - "traefik.http.routers.traefik-local.rule=Host(`192.168.0.9`)"
      - "traefik.http.routers.traefik-local.entrypoints=http"
      # Router traefik labels for https hostname entrypoint
      - "traefik.http.routers.https-home.rule=Host(`home.amtrend.ru`)"
      - "traefik.http.routers.https-home.tls.certResolver=le"
      - "traefik.http.routers.https-home.entrypoints=https"
  db:
    image: mariadb
    restart: unless-stopped
    container_name: db
    volumes:
      - ../db/initdb:/docker-entrypoint-initdb.d
      - ../db/workdb:/var/lib/mysql
    networks:
      - home_default
    #  phpmyadmin:
    #    image: phpmyadmin
    #    container_name: phpmyadmin
    #    links:
    #      - db
    #    environment:
    #      PMA_ARBITARY: 1
    #      PMA_HOST: db
    #      PMA_PORT: 3306
    #    restart: on-failure
    #    ports:
    #      - "8081:80"
    #    depends_on:
    #      - db
    env_file:
      - .env
  redis:
    restart: unless-stopped
    image: redis:alpine
    container_name: redis
    networks:
      - home_default
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - .env
  celery:
    restart: unless-stopped
    container_name: celery
    build:
      context: .
      dockerfile: dockerfiles/docker_celery.conf
    command: celery -A smart_home worker -n alarm_entrance_worker -Q for_alarm_entrance_task -c 1 --loglevel=info --logfile=logs/celery.log
    volumes:
      - ../code_site:/code
      - ../logs/celery:/code/logs
    networks:
      - home_default
    depends_on:
      - django
      - redis
      - db
    links:
      - redis
      - db
    env_file:
      - .env
  csbeapp:
    restart: unless-stopped
    container_name: csbeapp
    build:
      context: .
      dockerfile: dockerfiles/docker_csa.conf
    command: python ./main.py
    volumes:
      - ../code_be_stream_video_app:/code_app
      - ../media/stream/cam_b_entrance:/code_app/media_files
      - ../logs/csbeapp:/code_app/logs
    networks:
      - home_default
    env_file:
      - .env
  svbeapp:
    restart: unless-stopped
    container_name: svbeapp
    build:
      context: .
      dockerfile: dockerfiles/docker_sva.conf
    command: python ./main.py
    volumes:
      - ../code_be_save_video_app:/code_app
      - ../media/archive/cam_b_entrance:/code_app/media_files
      - ../logs/svbeapp:/code_app/logs
    networks:
      - home_default
    env_file:
      - .env
  mediamtx:
    image: bluenviron/mediamtx:1.13.0
    container_name: mediamtx
    restart: unless-stopped
    ports:
      - "8554:8554"   # RTSP
      - "8888:8888"   # HLS
      - "8889:8889"   # WebRTC HTTP
      - "8189:8189/udp" # WebRTC ICE
    volumes:
      - ./mediamtx/mediamtx.yml:/mediamtx.yml
    command: ["/mediamtx.yml"]
    networks:
      - home_default
    env_file:
      - .env
  coturn:
    image: coturn/coturn:4
    container_name: coturn
    restart: unless-stopped
    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
#      - "49160-49200:49160-49200/udp"
#    volumes:
#      - ./coturn/coturn.conf:/etc/turnserver.conf
#    command: ["turnserver", "-v", "-c", "/etc/turnserver.conf"]
    command: ["turnserver", "-v", "--fingerprint", "--listening-ip=0.0.0.0",
              "--listening-port=3478", "--external-ip=${EXTERNALIP}",
              "--lt-cred-mech", "--user=${RTCUSER}:${RTCPASS}",
              "--log-file=stdout"]
    networks:
      - home_default
networks:
  traefik_external:
    external: true
  home_default: